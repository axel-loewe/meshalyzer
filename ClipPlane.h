// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef ClipPlane_h
#define ClipPlane_h
#include <FL/Fl.H>
#include "TBmeshWin.h"
#include <math.h>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Choice.H>

class ClipPlane {
public:
  ClipPlane( TBmeshWin *tb );
  Fl_Double_Window *window;
  Fl_Group *Clip0;
  Fl_Value_Input *xdir0;
private:
  void cb_xdir0_i(Fl_Value_Input*, void*);
  static void cb_xdir0(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir0;
private:
  void cb_ydir0_i(Fl_Value_Input*, void*);
  static void cb_ydir0(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir0;
private:
  void cb_zdir0_i(Fl_Value_Input*, void*);
  static void cb_zdir0(Fl_Value_Input*, void*);
public:
  Fl_Button *unit0;
private:
  void cb_unit0_i(Fl_Button*, void*);
  static void cb_unit0(Fl_Button*, void*);
  void cb_Flip_i(Fl_Button*, void*);
  static void cb_Flip(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept0;
private:
  void cb_intercept0_i(Fl_Value_Slider*, void*);
  static void cb_intercept0(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas0;
  static Fl_Menu_Item menu_dispas0[];
private:
  void cb_Off_i(Fl_Menu_*, void*);
  static void cb_Off(Fl_Menu_*, void*);
  void cb_On_i(Fl_Menu_*, void*);
  static void cb_On(Fl_Menu_*, void*);
  void cb_Whole_i(Fl_Menu_*, void*);
  static void cb_Whole(Fl_Menu_*, void*);
  void cb_Intersection_i(Fl_Menu_*, void*);
  static void cb_Intersection(Fl_Menu_*, void*);
  void cb_Datified_i(Fl_Menu_*, void*);
  static void cb_Datified(Fl_Menu_*, void*);
public:
  Fl_Group *Clip1;
  Fl_Value_Input *xdir1;
private:
  void cb_xdir1_i(Fl_Value_Input*, void*);
  static void cb_xdir1(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir1;
private:
  void cb_ydir1_i(Fl_Value_Input*, void*);
  static void cb_ydir1(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir1;
private:
  void cb_zdir1_i(Fl_Value_Input*, void*);
  static void cb_zdir1(Fl_Value_Input*, void*);
public:
  Fl_Button *unit1;
private:
  void cb_unit1_i(Fl_Button*, void*);
  static void cb_unit1(Fl_Button*, void*);
  void cb_Flip1_i(Fl_Button*, void*);
  static void cb_Flip1(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept1;
private:
  void cb_intercept1_i(Fl_Value_Slider*, void*);
  static void cb_intercept1(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas1;
  static Fl_Menu_Item menu_dispas1[];
private:
  void cb_Off1_i(Fl_Menu_*, void*);
  static void cb_Off1(Fl_Menu_*, void*);
  void cb_On1_i(Fl_Menu_*, void*);
  static void cb_On1(Fl_Menu_*, void*);
  void cb_Whole1_i(Fl_Menu_*, void*);
  static void cb_Whole1(Fl_Menu_*, void*);
  void cb_Intersection1_i(Fl_Menu_*, void*);
  static void cb_Intersection1(Fl_Menu_*, void*);
  void cb_Datified1_i(Fl_Menu_*, void*);
  static void cb_Datified1(Fl_Menu_*, void*);
public:
  Fl_Group *Clip2;
  Fl_Value_Input *xdir2;
private:
  void cb_xdir2_i(Fl_Value_Input*, void*);
  static void cb_xdir2(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir2;
private:
  void cb_ydir2_i(Fl_Value_Input*, void*);
  static void cb_ydir2(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir2;
private:
  void cb_zdir2_i(Fl_Value_Input*, void*);
  static void cb_zdir2(Fl_Value_Input*, void*);
public:
  Fl_Button *unit2;
private:
  void cb_unit2_i(Fl_Button*, void*);
  static void cb_unit2(Fl_Button*, void*);
  void cb_Flip2_i(Fl_Button*, void*);
  static void cb_Flip2(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept2;
private:
  void cb_intercept2_i(Fl_Value_Slider*, void*);
  static void cb_intercept2(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas2;
  static Fl_Menu_Item menu_dispas2[];
private:
  void cb_Off2_i(Fl_Menu_*, void*);
  static void cb_Off2(Fl_Menu_*, void*);
  void cb_On2_i(Fl_Menu_*, void*);
  static void cb_On2(Fl_Menu_*, void*);
  void cb_Whole2_i(Fl_Menu_*, void*);
  static void cb_Whole2(Fl_Menu_*, void*);
  void cb_Intersection2_i(Fl_Menu_*, void*);
  static void cb_Intersection2(Fl_Menu_*, void*);
  void cb_Datified2_i(Fl_Menu_*, void*);
  static void cb_Datified2(Fl_Menu_*, void*);
public:
  Fl_Group *Clip3;
  Fl_Value_Input *xdir3;
private:
  void cb_xdir3_i(Fl_Value_Input*, void*);
  static void cb_xdir3(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir3;
private:
  void cb_ydir3_i(Fl_Value_Input*, void*);
  static void cb_ydir3(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir3;
private:
  void cb_zdir3_i(Fl_Value_Input*, void*);
  static void cb_zdir3(Fl_Value_Input*, void*);
public:
  Fl_Button *unit3;
private:
  void cb_unit3_i(Fl_Button*, void*);
  static void cb_unit3(Fl_Button*, void*);
  void cb_Flip3_i(Fl_Button*, void*);
  static void cb_Flip3(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept3;
private:
  void cb_intercept3_i(Fl_Value_Slider*, void*);
  static void cb_intercept3(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas3;
  static Fl_Menu_Item menu_dispas3[];
private:
  void cb_Off3_i(Fl_Menu_*, void*);
  static void cb_Off3(Fl_Menu_*, void*);
  void cb_On3_i(Fl_Menu_*, void*);
  static void cb_On3(Fl_Menu_*, void*);
  void cb_Whole3_i(Fl_Menu_*, void*);
  static void cb_Whole3(Fl_Menu_*, void*);
  void cb_Intersection3_i(Fl_Menu_*, void*);
  static void cb_Intersection3(Fl_Menu_*, void*);
  void cb_Datified3_i(Fl_Menu_*, void*);
  static void cb_Datified3(Fl_Menu_*, void*);
public:
  Fl_Group *Clip4;
  Fl_Value_Input *xdir4;
private:
  void cb_xdir4_i(Fl_Value_Input*, void*);
  static void cb_xdir4(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir4;
private:
  void cb_ydir4_i(Fl_Value_Input*, void*);
  static void cb_ydir4(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir4;
private:
  void cb_zdir4_i(Fl_Value_Input*, void*);
  static void cb_zdir4(Fl_Value_Input*, void*);
public:
  Fl_Button *unit4;
private:
  void cb_unit4_i(Fl_Button*, void*);
  static void cb_unit4(Fl_Button*, void*);
  void cb_Flip4_i(Fl_Button*, void*);
  static void cb_Flip4(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept4;
private:
  void cb_intercept4_i(Fl_Value_Slider*, void*);
  static void cb_intercept4(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas4;
  static Fl_Menu_Item menu_dispas4[];
private:
  void cb_Off4_i(Fl_Menu_*, void*);
  static void cb_Off4(Fl_Menu_*, void*);
  void cb_On4_i(Fl_Menu_*, void*);
  static void cb_On4(Fl_Menu_*, void*);
  void cb_Whole4_i(Fl_Menu_*, void*);
  static void cb_Whole4(Fl_Menu_*, void*);
  void cb_Intersection4_i(Fl_Menu_*, void*);
  static void cb_Intersection4(Fl_Menu_*, void*);
  void cb_Datified4_i(Fl_Menu_*, void*);
  static void cb_Datified4(Fl_Menu_*, void*);
public:
  Fl_Group *Clip5;
  Fl_Value_Input *xdir5;
private:
  void cb_xdir5_i(Fl_Value_Input*, void*);
  static void cb_xdir5(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ydir5;
private:
  void cb_ydir5_i(Fl_Value_Input*, void*);
  static void cb_ydir5(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zdir5;
private:
  void cb_zdir5_i(Fl_Value_Input*, void*);
  static void cb_zdir5(Fl_Value_Input*, void*);
public:
  Fl_Button *unit5;
private:
  void cb_unit5_i(Fl_Button*, void*);
  static void cb_unit5(Fl_Button*, void*);
  void cb_Flip5_i(Fl_Button*, void*);
  static void cb_Flip5(Fl_Button*, void*);
public:
  Fl_Value_Slider *intercept5;
private:
  void cb_intercept5_i(Fl_Value_Slider*, void*);
  static void cb_intercept5(Fl_Value_Slider*, void*);
public:
  Fl_Choice *dispas5;
  static Fl_Menu_Item menu_dispas5[];
private:
  void cb_Off5_i(Fl_Menu_*, void*);
  static void cb_Off5(Fl_Menu_*, void*);
  void cb_On5_i(Fl_Menu_*, void*);
  static void cb_On5(Fl_Menu_*, void*);
  void cb_Whole5_i(Fl_Menu_*, void*);
  static void cb_Whole5(Fl_Menu_*, void*);
  void cb_Intersection5_i(Fl_Menu_*, void*);
  static void cb_Intersection5(Fl_Menu_*, void*);
  void cb_Datified5_i(Fl_Menu_*, void*);
  static void cb_Datified5(Fl_Menu_*, void*);
  GLdouble x[6][4];
  bool intercept[6];
  float dim;
  TBmeshWin* tbmw;
public:
  bool on(int cp);
  GLdouble* plane(int cp);
private:
  void normcb( int cp);
public:
  void set_dim( float d);
  void unitize(Fl_Value_Input* x, Fl_Value_Input* y,Fl_Value_Input* z);
  bool visible(int cp);
private:
  void flip(int cp);
  void drawIntercept( int cp, bool b );
public:
  bool drawIntercept( int cp );
  bool datafied( int cp );
  void save(ostream& ofs);
  void read(istream& ifs);
};
#endif
