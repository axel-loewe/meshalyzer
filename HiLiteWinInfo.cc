// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "HiLiteWinInfo.h"
#include "TBmeshWin.h"

void HiLiteInfoWin::cb_window_i(Fl_Double_Window*, void*) {
  this->window->hide();
}
void HiLiteInfoWin::cb_window(Fl_Double_Window* o, void* v) {
  ((HiLiteInfoWin*)(o->user_data()))->cb_window_i(o,v);
}

void HiLiteInfoWin::cb_hilighttext_i(Fl_Browser* o, void*) {
  mw->select_hi(o->value());
}
void HiLiteInfoWin::cb_hilighttext(Fl_Browser* o, void* v) {
  ((HiLiteInfoWin*)(o->parent()->user_data()))->cb_hilighttext_i(o,v);
}

void HiLiteInfoWin::cb_Close_i(Fl_Button*, void*) {
  window->hide();
}
void HiLiteInfoWin::cb_Close(Fl_Button* o, void* v) {
  ((HiLiteInfoWin*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

HiLiteInfoWin::HiLiteInfoWin(TBmeshWin *a) {
  mw = a;
  { window = new Fl_Double_Window(265, 665, "Highlighted information");
    window->callback((Fl_Callback*)cb_window, (void*)(this));
    { hilighttext = new Fl_Browser(0, 0, 265, 645);
      hilighttext->type(1);
      hilighttext->callback((Fl_Callback*)cb_hilighttext);
      Fl_Group::current()->resizable(hilighttext);
    } // Fl_Browser* hilighttext
    { Fl_Button* o = new Fl_Button(0, 645, 265, 20, "Close");
      o->callback((Fl_Callback*)cb_Close);
    } // Fl_Button* o
    window->end();
  } // Fl_Double_Window* window
}

void HiLiteInfoWin::clear() {
  hilighttext->clear();
}

void HiLiteInfoWin::add(const char *s, void *d) {
  hilighttext->add( s, d );
}

const char * HiLiteInfoWin::text(int n) {
  return hilighttext->text(n);
}

void HiLiteInfoWin::topline( int a ) {
  hilighttext->topline( a );
}

int HiLiteInfoWin::topline( void ) {
  return hilighttext->topline();
}
