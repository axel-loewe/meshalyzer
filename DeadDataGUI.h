// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef DeadDataGUI_h
#define DeadDataGUI_h
#include <FL/Fl.H>
class TBmeshWin;
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Color_Chooser.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Return_Button.H>

class DeadDataGUI {
public:
  DeadDataGUI( TBmeshWin *w);
  Fl_Double_Window *window;
  Fl_Light_Button *showDeadData;
private:
  inline void cb_showDeadData_i(Fl_Light_Button*, void*);
  static void cb_showDeadData(Fl_Light_Button*, void*);
public:
  Fl_Group *deadgrp;
  Fl_Value_Input *minValidVal;
  Fl_Value_Input *maxValidVal;
private:
  inline void cb_Recalibrate_i(Fl_Button*, void*);
  static void cb_Recalibrate(Fl_Button*, void*);
public:
  Fl_Color_Chooser *dead_color;
private:
  inline void cb_dead_color_i(Fl_Color_Chooser*, void*);
  static void cb_dead_color(Fl_Color_Chooser*, void*);
public:
  Fl_Value_Slider *deadopac;
  Fl_Box *curCol;
  Fl_Box *workingCol;
  Fl_Light_Button *minValid;
private:
  inline void cb_minValid_i(Fl_Light_Button*, void*);
  static void cb_minValid(Fl_Light_Button*, void*);
public:
  Fl_Button *deadApp;
private:
  inline void cb_deadApp_i(Fl_Button*, void*);
  static void cb_deadApp(Fl_Button*, void*);
public:
  Fl_Light_Button *maxValid;
private:
  inline void cb_maxValid_i(Fl_Light_Button*, void*);
  static void cb_maxValid(Fl_Light_Button*, void*);
  inline void cb_Done_i(Fl_Return_Button*, void*);
  static void cb_Done(Fl_Return_Button*, void*);
  TBmeshWin *mwtb; 
};
#endif
