# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cc}
decl {\#include "Graph.h"} {private local
}

decl {using namespace std;} {private local
}

class PlotWin {open
} {
  decl {double *data;} {private local
  }
  decl {int datasize;} {private local
  }
  decl {double datamin;} {private local
  }
  decl {int tm;        // datum to highlight} {private local
  }
  decl {int _id;  // vertex id} {private local
  }
  decl {double *xv;} {private local
  }
  decl {double tmx[2], tmy[2];} {private local
  }
  decl {Fl_Button *but;} {public local
  }
  decl {bool rotated;} {private local
  }
  decl {void set_data( int, int, double *, int t=-1, float dt=1,float torg=0, double* xd=NULL);} {public local
  }
  decl {void set_data( int, int, float *, int t=-1, float dt=1, float torg=0, float* xd=NULL);} {public local
  }
  decl {void highlight( int );} {public local
  }
  decl {void rotate( bool );} {public local
  }
  decl {void writedata();} {private local
  }
  decl {string _datafile = "time series";} {private local
  }
  Function {PlotWin(  string title )} {open
  } {
    Fl_Window window {
      label {Time plot}
      user_data this
      callback {this->window->hide();} open
      xywh {720 259 520 200} type Double box UP_BOX hide resizable
      code0 {\#include <cstring>}
      code1 {\#include <string>}
      code2 {using namespace std;}
    } {
      Fl_Box graph {
        xywh {5 5 515 165} resizable
        code0 {\#include "Graph.h"}
        class Graph
      }
      Fl_Group button_grp {open
        xywh {5 170 510 25} box ENGRAVED_BOX color 52
      } {
        Fl_Return_Button {} {
          label Close
          callback {this->window->hide();}
          xywh {15 175 75 15} labelsize 10
        }
        Fl_Button {} {
          label Write
          callback {writedata();}
          xywh {275 175 70 15} labelsize 10
        }
        Fl_Light_Button rotbut {
          label Rotate
          callback {rotate(o->value());}
          xywh {105 175 70 15} labelsize 10
        }
        Fl_Button {} {
          label Pop
          xywh {190 175 70 15} labelsize 10
        }
        Fl_Light_Button autoscalebut {
          label Autoscale
          callback {autoscale(o->value());}
          xywh {440 175 70 15} value 1 labelsize 10
        }
        Fl_Button {} {
          label Hold
          callback {graph->copy_curve(0);}
          xywh {360 175 70 15} labelsize 10
        }
      }
    }
    code {graph->num_dynamic(2);
xv = new double[1];
data = new double[1];
tm = 0;
datasize = -1;
rotated = false;
window->label(strdup(title.c_str()));
window->user_data(this);} {}
  }
  decl {~PlotWin()} {public local
  }
  Function {autoscale(int a)} {open
  } {
    code {graph->autoscale(a);} {}
  }
  Function {datafile(string d)} {open
  } {
    code {int i0 = d.rfind("/");
if ( i0 < string::npos )
  _datafile= d.substr(i0+1,string::npos);
else
  _datafile = d;
window->label( _datafile.c_str() );} {selected
    }
  }
}
